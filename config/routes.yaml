controllers:
    resource: ../src/Controller/
    type: attribute


# app_lucky_number:
#     path: /lucky/number/{number}
#     controller: App\Controller\LuckyController::number
#     methods: GET|HEAD    

# if gives the default value, then the parameters are optional
blog_list_default:
    path: /blog/{page?}
    controller: App\Controller\BlogController::list
    methods: GET
    defaults:
        page: 10
    requirements:
        page: '\d+'
# default value inline style
blog_list_inline:
    path: /blog/{page<\d+>?1}
    controller: App\Controller\BlogController::list

# api_post_edit and api_post_show are the two styles of params validation
api_post_edit:
    path: /api/posts/{id}
    controller: App\Controller\BlogApiController::edit
    # methods: PUT
    requirements:
        page: '\d+'

api_post_show:
    path: /api/post/{id<\d+>}
    controller: App\Controller\BlogApiController::show
    methods: GET
    # requirements:
    #     page: '\d+'

contact:
    path: /contact
    controller: App\Controller\DefaultController::contact
    condition: "context.getMethod() in ['GET', 'HEAD'] and request.headers.get('User-Agent') matches '/firefox/i'"
    # expressions can also include configuration parameters:
    # condition: "request.headers.get('User-Agent') matches '%app.allowed_browsers%'"
    # expressions can even use environment variables:
    # condition: "context.getHost() == env('APP_MAIN_HOST')"

post_show:
    path: /posts/{id}
    controller: App\Controller\DefaultController::showPost
    # expressions can etrieve route parameter values using the "params" variable
    condition: "params['id'] < 1000"

# special parameters
# _controller: this parameter is used to determine which controller and action is executed when the route is matched
# _format: the matched value is used to set the "request format" of the Request object. this is used fo rsuch things as setting the content-type of the response(e.g. a json formation translates into a content-type of application/json).
# _fragment: used to set the fragment identifier, which is the optional last part of a URL that starts with # character and is used to identify a portion foa document.
# _locale: used to set the locale on the request

article_search:
    path: /articles/{_locale}/search.{_format}
    controller: App\Controller\ArticleController::search
    locale: en
    format: html
    requirements:
        _locale: en|fr
        _format: html|xml


# Extra parameters, used to pass extra arguments to the controllers of the routers
blog_index:
    path: /blog/{page}
    controller: App\Controller\BlogController::index
    defaults:
        page: 1
        title: "Hello World"
